[project]
name = "nova"
version = "0.1.0"
description = "AI Research Assistant - A configurable CLI chatbot with chat history and memory"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "httpx>=0.25.0",
    "openai>=1.97.1",
    "anthropic>=0.60.0",
    "ollama>=0.5.1",
]

[project.scripts]
nova = "nova.main:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=1.1.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=nova",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "pre-commit>=4.2.0",
    "ruff>=0.12.7",
]

[tool.ruff]
target-version = "py311"
line-length = 88
extend-exclude = [
    "__pycache__",
    ".pytest_cache",
    ".coverage",
    "htmlcov",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Exception handling without 'from' - acceptable for custom exceptions
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["N801", "N802", "N803", "N806"]
"nova/cli/*.py" = ["B904"]  # Allow raising without 'from' in CLI commands

[tool.black]
target-version = ["py311"]
line-length = 88
skip-string-normalization = false

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["nova"]
